Climate Change Assigment
========================================================
author: Mehdi Houacine
date: 16/07/2016

1.1.1 Read the data
========================================================

Let's read the dataset climate_change.csv into R and see its structure.

```{r echo=FALSE}
clim <- read.csv("climate_change.csv")

```

```{r echo=FALSE}
str(clim)

```



1.1.2 - Dataset split
========================================================

Let's split the data into a training set, consisting of all the observations up to and including 2006, and a testing set consisting of the remaining years.

```{r}
Train <- subset(clim, Year <= 2006)
Test <- subset(clim, Year > 2006)

```

```{r echo=FALSE}
sprintf("The dataset clim contains %d obs., the train set contains %d obs and the test set contains %d obs.", nrow(clim), nrow(Train), nrow(Test))

```



1.1.3 - Dataset split
========================================================

Next, we will build a linear regression model to predict the dependent variable Temp, using MEI, CO2, CH4, N2O, CFC.11, CFC.12, TSI, and Aerosols as independent variables (*Year and Month should not be used in the model*). We will then use the training set to build the model.

```{r}
model1 = lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI + Aerosols, data=clim)

```


Here is the model R2 (the "Multiple R-squared" value):

```{r}
summary(model1)$r.squared

```


1.2 - Significant variables of model1
========================================================

Let's see which variables are significant in this first model.
We will consider a variable signficant only if the p-value is below 0.05.

```{r}
significant_pValues <- summary(model1)$coef[,"Pr(>|t|)"] <= 0.05

```

```{r echo=FALSE}
data.frame(significant_pValues)
```

2.1 - (Contradiction in the data)
========================================================

...

2.2.1 - Correlation
========================================================

Which variables is N2O highly correlated with (absolute correlation greater than 0.7)?

```{r eval=FALSE}
cor(Train)["N2O"]

```

```{r echo=FALSE}
data.frame(cor(Train)[,"N2O"]>0.7)
```

2.2.2 - Correlation
========================================================

Which of the following independent variables is CFC.11 highly correlated with?

```{r eval=FALSE}
cor(Train)["CFC.11"]

```

```{r echo=FALSE}
data.frame(cor(Train)[,"CFC.11"]>0.7)
```

3.1 - Simplified Model
========================================================

Given that the correlations are so high, let us focus on the N2O variable and build a model with only MEI, TSI, Aerosols and N2O as independent variables.

```{r}
model2 <- lm(Temp ~ N2O + MEI + TSI + Aerosols, data=Train)

```

```{r echo=FALSE}
sprintf("In this reduced model, the coefficient of N2O is %f. It was %f in the previous model1.",summary(model2)$coef["N2O", "Estimate"], summary(model1)$coef["N2O", "Estimate"] )

sprintf("The R^2 of model2 is %f. It was %f in model1.", summary(model2)$r.squared, summary(model1)$r.squared)

```

3.2 - Simplified Model - Explanation
========================================================


We have observed that, for this problem, when we remove many variables the sign of N2O flips.

The model has not lost a lot of explanatory power (the model R2 is 0.7261 compared to 0.7509 previously) despite removing many variables. 

As discussed in lecture, this type of behavior is typical when building a model where many of the independent variables are highly correlated with each other. 

In this particular problem many of the variables (CO2, CH4, N2O, CFC.11 and CFC.12) are highly correlated, since they are all driven by human industrial development.

4.1.1 - Akaike Information Criterion
========================================================

Let's try the AIC trade-off with the R step() function.

```{r echo=FALSE}
fullModel <- lm(Temp ~ ., data=Train)
simpleModel <- step(fullModel)

```

4.1.2 - Akaike Information Criterion
========================================================

```{r echo=FALSE}
sprintf("The R^2 of the newly simplified model is %f.", summary(simpleModel)$r.squared)
```

The CH4 has been removed now.

5.1 - Test on unseen data
========================================================

Let's try to calculate temperature predictions for the testing data set, using the predict function.

```{r}
TempPrediction <- predict(simpleModel, newdata=Test)
SSE = sum((TempPrediction - Test$Temp)^2)
SST = sum( (mean(Train$Temp) - Test$Temp)^2)
OutOfSampleR2 <- 1 - SSE/SST

```


```{r echo="FALSE"}
sprintf("The R2 on the test set is %f.", OutOfSampleR2)

```

